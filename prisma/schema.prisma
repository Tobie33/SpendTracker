// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  incomeBalance  Int       @default(0)
  expenseBalance Int       @default(0)
  accounts       Account[]
  sessions       Session[]
  Incomes        Income[]
  Expense        Expense[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Income {
  id             Int        @id @default(autoincrement())
  incomeType     incomeType @relation(fields: [incomeTypeId], references: [id])
  incomeTypeName String     @default("")
  incomeTypeId   Int
  userId         String
  user           User       @relation(fields: [userId], references: [id])
  amount         Int
  date           DateTime   @default(now())
}

model Expense {
  id              Int          @id @default(autoincrement())
  expenseType     expenseType? @relation(fields: [expenseTypeId], references: [id])
  expenseTypeName String       @default("")
  expenseTypeId   Int
  userId          String
  user            User?        @relation(fields: [userId], references: [id])
  amount          Int
  date            DateTime     @default(now())
}

model incomeType {
  id        Int      @id @default(autoincrement())
  name      String
  incomes   Income[]
  typeColor String   @default("")
}

model expenseType {
  id        Int       @id @default(autoincrement())
  name      String
  expenses  Expense[]
  typeColor String    @default("")
}
